module pp

imports

	libstratego-gpp
	lib/runtime/refactoring/-
	src-gen/pp/Test-pp

rules
	
  pp-Test-string =
    prettyprint-SDF-start-symbols
    ; !V([], <id>)
    ; box2text-string(|120)
      
  pp-partial-Test-string =
    prettyprint-example
    ; !V([], <id>)
    ; box2text-string(|120)
      
  pp-debug :
    ast -> result
    with
       result := <pp-Test-string> ast
    <+ <bottomup(try(not(is-string); not(is-list); not(pp-Test-string); debug(!"cannot pp ")))> ast
    ;  result := ""

rules
  
  /**
  * Given an old AST and a new AST, pretty-prints the new AST while presevering 
  * layout (e.g. whitespacing and comments) associated with the old AST.
  *
  * Example:
  *   new-text := <construct-textual-change> (old-ast, new-ast)
  */
  construct-textual-change = construct-textual-change(pp-partial-Test-string, parenthesize, override-reconstruction, resugar)

